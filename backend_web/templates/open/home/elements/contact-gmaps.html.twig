<!-- Google Map -->
<div class="map">
    <div id="google_map" class="google_map">
        <div class="map_container">
            <div id="map"></div>
        </div>
    </div>
</div>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDimWax6oDetilbXKqdmmoIIxHREyJ4aY0"></script>
<script>
// In this example, we center the map, and add a marker, using a LatLng object
// literal instead of a google.maps.LatLng object. LatLng object literals are
// a convenient way to add a LatLng coordinate and, in most cases, can be used
// in place of a google.maps.LatLng object.

var map;
function initialize() {
    var mapOptions = {
        zoom: 16,
        center: {lat: 40.4459085, lng: -3.667624 }
    };
    map = new google.maps.Map(document.getElementById('map'),
        mapOptions);

    var marker = new google.maps.Marker({
        // The below line is equivalent to writing:
        // position: new google.maps.LatLng(-34.397, 150.644)
        position: {lat: 40.4453711, lng: -3.6682841},
        map: map,
        title: "Peluquería Doble RR"
    });

    // You can use a LatLng literal in place of a google.maps.LatLng object when
    // creating the Marker object. Once the Marker object is instantiated, its
    // position will be available as a google.maps.LatLng object. In this case,
    // we retrieve the marker's position using the
    // google.maps.LatLng.getPosition() method.
    var infowindow = new google.maps.InfoWindow({
        content: `<p>
                    <b>Peluquería Doble RR</b><br/>
                    Calle Clara Del Rey 57<br/>
                    28002 - Madrid <br/>
                    Tel: +34 91 455 74 43
                 </p>`
    });

    google.maps.event.addListener(marker, 'click', function() {
        infowindow.open(map, marker);
    });
}
google.maps.event.addDomListener(window, 'load', initialize);
</script>