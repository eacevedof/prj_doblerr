{% extends '/open/promotion/promotion.html.twig' %}
{% block body %}
<div class="jumbotron">
    <h1 class="display-4">Promoción Botox Capilar</h1>
    <p class="lead">
        - Con cualquier trabajo técnico o moldeado el tratamiento Botox capilar es gratis.<br/>
        - Tratamiento Botox Capilar valorado en 15 €
    </p>
    <hr class="my-4">
    <p>Aprovecha esta oportunidad. Apuntaté ahora</p>
    {% verbatim %}
    <form id="form-subscribe"  @submit="handleSubmit">
        <input v-if="!showconfirm" type="text" v-model="name" placeholder="Nombre" required="required">
        <input type="hidden" v-model="referer">
        <input v-if="!showconfirm" type="email" v-model="email"  placeholder="Email" required="required">
        <input v-if="!showconfirm" type="text" v-model="phone"  placeholder="Teléfono" required="required">
        <input v-if="showconfirm" type="text" v-model="codeconfirm"  placeholder="Código confirmación" required="required">
        <p class="lead">
            <button id="btn-confirm" class="btn btn-primary" :disabled="issending" >
                {{btnsend}}
                <img v-if="issending" src="/assets/images/loading-bw.gif" width="25" height="25"/>
            </button>
        </p>
    </form>
    {% endverbatim %}
</div>
{% endblock %}
{% block javascripts %}
<script>
const pr = (v,t) => {
    const str = JSON.stringify(v);
    alert(`${t}\n:${str}`)
}

const get_slug = ()=>{
    const parts = window.location.pathname.split("/")
    const slugquery = parts[parts.length-1]
    const slug = slugquery.split("?")
    return slug[0] ?? ""
}

const formid = "form-subscribe"

const app = new Vue({
    el: `#${formid}`,
    data(){
        return {
            referer: "{{ referer }}",
            btnsend: "Enviar",
            showconfirm: false,
            issending: false,
            errors: [],
            codeconfirm: "",
            name: "Eledu",
            email: "eac@ya.com",
            phone: "123474128",
        }
    },

    methods:{
        subscribe(){
            const self = this

            self.issending = true
            self.btnsend = "Procesando..."

            const slug = get_slug()
            const url = `/promotion/subscribe/${slug}`

            const data = new FormData();
            data.append("action","subscribe")
            data.append("referer",this.referer)
            data.append("name",this.name)
            data.append("email",this.email)
            data.append("phone",this.phone)

            fetch(url, {
                method: 'post',
                body: data
            })
            .then(response => response.json())
            .then(response => {
                self.issending = false
                self.btnsend = "Enviar"
                
                console.log("reponse",response)
                
                if(response.title == "success") {
                    Swal.fire({
                        icon: 'success',
                        title: 'Enhorabuena! <br/> Subscripción pendiente de confirmación',
                        html: 'Revisa tu email e ingresa el código que te hemos enviado.',
                    })
                    self.showconfirm = true;
                } else {
                    Swal.fire({
                        icon: 'warning',
                        title: 'Esta acción no se ha podido completar',
                        text: response.description,
                    })
                }
            })
            .catch(error => {
                self.issending = false
                self.btnsend = "Enviar"

                console.log("CATCH ERROR subscribe",error)
                Swal.fire({
                    icon: 'error',
                    title: 'Vaya! Ha ocurrido un error',
                    text: error.toString(),
                })
            })
        },//subscribe

        confirm(){
            const self = this

            self.issending = true
            self.btnsend = "Procesando..."

            const slug = get_slug()
            const url = `/promotion/confirm/${slug}`

            const data = new FormData();
            data.append("action","confirm-code")
            data.append("codeconfirm",this.codeconfirm)
            fetch(url, {
                method: 'post',
                body: data
            })
            .then(response => response.json())
            .then(function(response) {
                self.issending = false
                self.btnsend = "Enviar"

                console.log("reponse",response)
                
                if(response.title == "success") {
                    $(".app_button_close").click()
                    Swal.fire({
                        icon: 'success',
                        title: 'Enhorabuena! <br/> Subscripción realizada correctamente',
                        html: response.description
                    })
                    
                    self.showconfirm = true;
                } else {
                    Swal.fire({
                        icon: 'warning',
                        title: 'Esta acción no se ha podido completar',
                        text: response.description,
                    })
                }
            })
            .catch(error => {
                self.issending = false
                self.btnsend = "Enviar"

                console.log("CATCH ERROR confirm",error)
                Swal.fire({
                    icon: 'error',
                    title: 'Vaya! Ha ocurrido un error',
                    text: error.toString(),
                })
            })
        },

        handleSubmit: function(e) {
          e.preventDefault()
          if(!this.showconfirm)
              this.subscribe()
          else{
              this.confirm()
          }
        }//handleSubmit(e)

    },//methods

    mounted(){
        console.log("mounted")
        //document.getElementById("form-subscribe").reset()
    }
})
</script>
{% endblock %}


